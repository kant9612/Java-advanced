{"filter":false,"title":"Fruit.java","tooltip":"/応用07/Fruit.java","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":61,"column":0},"action":"insert","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.Comparator;","import java.util.List;","","public class Fruit {","\tpublic String name;","\t","\tpublic int quantity;","\t","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","\t","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","\t","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","\t","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","//\t\t10こ以下に絞り込まれたリストを作る","\t\tList<Fruit> filtered = new ArrayList<>();","//\t\t拡張for文でfruitsをループ","\t\tfor(Fruit fruit: fruits) {","//\t\t\tif文で10個以下に絞る","\t\t\tif(fruit.quantity <= 10) {","//\t\t\t\t絞り込まれたリストに追加","\t\t\t\tfiltered.add(fruit);","\t\t\t}","\t\t}","//\t\t20個ずつ追加する","\t\tList<Fruit> ordered = new ArrayList<>();","\t\tfor(Fruit fruit: filtered) {","\t\t\tordered.add(fruit.order(20));","\t\t}","//\t\t個数がすくない順に並べる","\t\tordered.sort(new Comparator<Fruit>() {","\t\t\t@Override","\t\t\tpublic int compare(Fruit f1, Fruit f2) {","\t\t\t\treturn f1.quantity - f2.quantity;","\t\t\t}","\t\t});","\t\t","//\t\t絞り込んで並び替えたリストを拡張for文でループしながら出力する","\t\tfor(Fruit fruit: ordered) {","\t\t\tSystem.out.println(fruit);","\t\t}","\t}","}",""],"id":1}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":1},"action":"remove","lines":["\t"],"id":2},{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":24,"column":0},"end":{"row":24,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":54,"column":0},"end":{"row":54,"column":2},"action":"remove","lines":["\t\t"]}],[{"start":{"row":0,"column":0},"end":{"row":61,"column":0},"action":"remove","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.Comparator;","import java.util.List;","","public class Fruit {","\tpublic String name;","","\tpublic int quantity;","","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","//\t\t10こ以下に絞り込まれたリストを作る","\t\tList<Fruit> filtered = new ArrayList<>();","//\t\t拡張for文でfruitsをループ","\t\tfor(Fruit fruit: fruits) {","//\t\t\tif文で10個以下に絞る","\t\t\tif(fruit.quantity <= 10) {","//\t\t\t\t絞り込まれたリストに追加","\t\t\t\tfiltered.add(fruit);","\t\t\t}","\t\t}","//\t\t20個ずつ追加する","\t\tList<Fruit> ordered = new ArrayList<>();","\t\tfor(Fruit fruit: filtered) {","\t\t\tordered.add(fruit.order(20));","\t\t}","//\t\t個数がすくない順に並べる","\t\tordered.sort(new Comparator<Fruit>() {","\t\t\t@Override","\t\t\tpublic int compare(Fruit f1, Fruit f2) {","\t\t\t\treturn f1.quantity - f2.quantity;","\t\t\t}","\t\t});","","//\t\t絞り込んで並び替えたリストを拡張for文でループしながら出力する","\t\tfor(Fruit fruit: ordered) {","\t\t\tSystem.out.println(fruit);","\t\t}","\t}","}",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.List;","","public class Fruit {","\tpublic String name;","\t","\tpublic int quantity;","\t","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","\t","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","\t","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","\t","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","\t\t","\t\tfruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.map(f -> f.order(20))","\t\t\t.sorted((f1, f2) -> f1.quantity - f2.quantity)","\t\t\t.forEach(System.out::println);","\t}","}",""]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"remove","lines":["\t"],"id":4},{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"remove","lines":["\t\t"]}],[{"start":{"row":0,"column":0},"end":{"row":39,"column":0},"action":"remove","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.List;","","public class Fruit {","\tpublic String name;","","\tpublic int quantity;","","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","","\t\tfruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.map(f -> f.order(20))","\t\t\t.sorted((f1, f2) -> f1.quantity - f2.quantity)","\t\t\t.forEach(System.out::println);","\t}","}",""],"id":5},{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.List;","","public class Fruit {","\tpublic String name;","\t","\tpublic int quantity;","\t","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","\t","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","\t","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","\t","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","\t\t","\t\tfruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.map(f -> f.order(20))","\t\t\t.sorted((f1, f2) -> f1.quantity - f2.quantity)","\t\t\t.forEach(System.out::println);","\t\t","\t\tlong count = fruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.count();","\t\t","\t\tSystem.out.println(count);","\t}","}",""]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"remove","lines":["\t"],"id":6},{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"remove","lines":["\t\t"]},{"start":{"row":37,"column":0},"end":{"row":37,"column":2},"action":"remove","lines":["\t\t"]},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"remove","lines":["\t\t"]}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.List;","","public class Fruit {","\tpublic String name;","","\tpublic int quantity;","","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","","\t\tfruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.map(f -> f.order(20))","\t\t\t.sorted((f1, f2) -> f1.quantity - f2.quantity)","\t\t\t.forEach(System.out::println);","","\t\tlong count = fruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.count();","","\t\tSystem.out.println(count);","\t}","}",""],"id":7},{"start":{"row":0,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["package ouyou07;","","import java.util.ArrayList;","import java.util.List;","import java.util.stream.Collectors;","","public class Fruit {","\tpublic String name;","\t","\tpublic int quantity;","\t","\tpublic Fruit(String name, int quantity) {","\t\tthis.name = name;","\t\tthis.quantity = quantity;","\t}","\t","\tpublic Fruit order(int quantityToAdd) {","\t\treturn new Fruit(this.name, this.quantity + quantityToAdd);","\t}","\t","\t@Override","\tpublic String toString() {","\t\treturn name + \": \" + quantity + \"個\";","\t}","\t","\tpublic static void main(String[] args) {","\t\tList<Fruit> fruits = new ArrayList<>();","\t\tfruits.add(new Fruit(\"りんご\", 7));","\t\tfruits.add(new Fruit(\"みかん\", 15));","\t\tfruits.add(new Fruit(\"いちご\", 4));","\t\tfruits.add(new Fruit(\"メロン\", 8));","\t\tfruits.add(new Fruit(\"ぶどう\", 20));","\t\t","\t\tfruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.map(f -> f.order(20))","\t\t\t.sorted((f1, f2) -> f1.quantity - f2.quantity)","\t\t\t.forEach(System.out::println);","\t\t","\t\t//確認問題1","\t\tlong count = fruits.stream()","\t\t\t.filter(f -> f.quantity <= 10)","\t\t\t.count();","\t\t","\t\tSystem.out.println(count);","\t\t","\t\t//確認問題2","\t\tList<Fruit> sortedFruits = fruits.stream()","\t\t\t.sorted((f1, f2) -> f2.quantity - f1.quantity)","\t\t\t.collect(Collectors.toList());","\t\t","\t\tSystem.out.println(sortedFruits);","\t}","}",""]}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":1},"action":"remove","lines":["\t"],"id":8},{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":24,"column":0},"end":{"row":24,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"remove","lines":["\t\t"]},{"start":{"row":38,"column":0},"end":{"row":38,"column":2},"action":"remove","lines":["\t\t"]},{"start":{"row":43,"column":0},"end":{"row":43,"column":2},"action":"remove","lines":["\t\t"]},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"remove","lines":["\t\t"]},{"start":{"row":50,"column":0},"end":{"row":50,"column":2},"action":"remove","lines":["\t\t"]}]]},"ace":{"folds":[],"scrolltop":633.5,"scrollleft":0,"selection":{"start":{"row":54,"column":0},"end":{"row":54,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":41,"state":"start","mode":"ace/mode/java"}},"timestamp":1620610772510,"hash":"a0cfc22930795f27fa5924918750c236846147e7"}